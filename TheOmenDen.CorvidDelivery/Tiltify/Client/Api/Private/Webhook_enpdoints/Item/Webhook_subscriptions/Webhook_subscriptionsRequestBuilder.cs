// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Private.Webhook_enpdoints.Item.Webhook_subscriptions.Item;
namespace TheOmenDen.CorvidDelivery.TiltifyApi.Api.Private.Webhook_enpdoints.Item.Webhook_subscriptions {
    /// <summary>
    /// Builds and executes requests for operations under \api\private\webhook_enpdoints\{webhook_endpoint_id}\webhook_subscriptions
    /// </summary>
    public class Webhook_subscriptionsRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the TheOmenDen.CorvidDelivery.TiltifyApi.api.private.webhook_enpdoints.item.webhook_subscriptions.item collection</summary>
        /// <param name="position">Campaign/Team Campaign/Fundraising Event public_id</param>
        /// <returns>A <see cref="WithEvent_ItemRequestBuilder"/></returns>
        [Obsolete("")]
        public WithEvent_ItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("event_id", position);
            return new WithEvent_ItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new <see cref="Webhook_subscriptionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Webhook_subscriptionsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/private/webhook_enpdoints/{webhook_endpoint_id}/webhook_subscriptions", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="Webhook_subscriptionsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Webhook_subscriptionsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/private/webhook_enpdoints/{webhook_endpoint_id}/webhook_subscriptions", rawUrl) {
        }
    }
}
