// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Campaigns;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Causes;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.CurrentUser;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Fundraising_events;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.LegacyRelays;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Team_campaigns;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Teams;
using TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public.Users;
namespace TheOmenDen.CorvidDelivery.TiltifyApi.Api.Public {
    /// <summary>
    /// Builds and executes requests for operations under \api\public
    /// </summary>
    public class PublicRequestBuilder : BaseRequestBuilder {
        /// <summary>The campaigns property</summary>
        public CampaignsRequestBuilder Campaigns { get =>
            new CampaignsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The causes property</summary>
        public CausesRequestBuilder Causes { get =>
            new CausesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The currentUser property</summary>
        public CurrentUserRequestBuilder CurrentUser { get =>
            new CurrentUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The fundraising_events property</summary>
        public Fundraising_eventsRequestBuilder Fundraising_events { get =>
            new Fundraising_eventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The legacyRelays property</summary>
        public LegacyRelaysRequestBuilder LegacyRelays { get =>
            new LegacyRelaysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The team_campaigns property</summary>
        public Team_campaignsRequestBuilder Team_campaigns { get =>
            new Team_campaignsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The teams property</summary>
        public TeamsRequestBuilder Teams { get =>
            new TeamsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The users property</summary>
        public UsersRequestBuilder Users { get =>
            new UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="PublicRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PublicRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/public", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="PublicRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PublicRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/public", rawUrl) {
        }
    }
}
