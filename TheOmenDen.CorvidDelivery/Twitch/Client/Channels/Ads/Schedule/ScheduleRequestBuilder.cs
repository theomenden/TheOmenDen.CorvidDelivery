// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using TheOmenDen.CorvidDelivery.Twitch.Channels.Ads.Schedule.Snooze;
namespace TheOmenDen.CorvidDelivery.Twitch.Channels.Ads.Schedule {
    /// <summary>
    /// Builds and executes requests for operations under \channels\ads\schedule
    /// </summary>
    public class ScheduleRequestBuilder : BaseRequestBuilder {
        /// <summary>The snooze property</summary>
        public SnoozeRequestBuilder Snooze { get =>
            new SnoozeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ScheduleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ScheduleRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/channels/ads/schedule", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="ScheduleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ScheduleRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/channels/ads/schedule", rawUrl) {
        }
    }
}
