// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace TheOmenDen.CorvidDelivery.Twitch.Clips {
    public class ClipsGetResponse_data : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The broadcaster_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BroadcasterId { get; set; }
#nullable restore
#else
        public string BroadcasterId { get; set; }
#endif
        /// <summary>The broadcaster_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BroadcasterName { get; set; }
#nullable restore
#else
        public string BroadcasterName { get; set; }
#endif
        /// <summary>The created_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The creator_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatorId { get; set; }
#nullable restore
#else
        public string CreatorId { get; set; }
#endif
        /// <summary>The creator_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatorName { get; set; }
#nullable restore
#else
        public string CreatorName { get; set; }
#endif
        /// <summary>The duration property</summary>
        public double? Duration { get; set; }
        /// <summary>The embed_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmbedUrl { get; set; }
#nullable restore
#else
        public string EmbedUrl { get; set; }
#endif
        /// <summary>The game_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GameId { get; set; }
#nullable restore
#else
        public string GameId { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The is_featured property</summary>
        public bool? IsFeatured { get; set; }
        /// <summary>The language property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Language { get; set; }
#nullable restore
#else
        public string Language { get; set; }
#endif
        /// <summary>The thumbnail_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailUrl { get; set; }
#nullable restore
#else
        public string ThumbnailUrl { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>The video_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VideoId { get; set; }
#nullable restore
#else
        public string VideoId { get; set; }
#endif
        /// <summary>The view_count property</summary>
        public double? ViewCount { get; set; }
        /// <summary>The vod_offset property</summary>
        public double? VodOffset { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="ClipsGetResponse_data"/> and sets the default values.
        /// </summary>
        public ClipsGetResponse_data() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ClipsGetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ClipsGetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ClipsGetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"broadcaster_id", n => { BroadcasterId = n.GetStringValue(); } },
                {"broadcaster_name", n => { BroadcasterName = n.GetStringValue(); } },
                {"created_at", n => { CreatedAt = n.GetStringValue(); } },
                {"creator_id", n => { CreatorId = n.GetStringValue(); } },
                {"creator_name", n => { CreatorName = n.GetStringValue(); } },
                {"duration", n => { Duration = n.GetDoubleValue(); } },
                {"embed_url", n => { EmbedUrl = n.GetStringValue(); } },
                {"game_id", n => { GameId = n.GetStringValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"is_featured", n => { IsFeatured = n.GetBoolValue(); } },
                {"language", n => { Language = n.GetStringValue(); } },
                {"thumbnail_url", n => { ThumbnailUrl = n.GetStringValue(); } },
                {"title", n => { Title = n.GetStringValue(); } },
                {"url", n => { Url = n.GetStringValue(); } },
                {"video_id", n => { VideoId = n.GetStringValue(); } },
                {"view_count", n => { ViewCount = n.GetDoubleValue(); } },
                {"vod_offset", n => { VodOffset = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("broadcaster_id", BroadcasterId);
            writer.WriteStringValue("broadcaster_name", BroadcasterName);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("creator_id", CreatorId);
            writer.WriteStringValue("creator_name", CreatorName);
            writer.WriteDoubleValue("duration", Duration);
            writer.WriteStringValue("embed_url", EmbedUrl);
            writer.WriteStringValue("game_id", GameId);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("is_featured", IsFeatured);
            writer.WriteStringValue("language", Language);
            writer.WriteStringValue("thumbnail_url", ThumbnailUrl);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("url", Url);
            writer.WriteStringValue("video_id", VideoId);
            writer.WriteDoubleValue("view_count", ViewCount);
            writer.WriteDoubleValue("vod_offset", VodOffset);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
