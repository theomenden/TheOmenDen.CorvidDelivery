// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using TheOmenDen.CorvidDelivery.Twitch.Bits.Cheermotes;
using TheOmenDen.CorvidDelivery.Twitch.Bits.Extensions;
using TheOmenDen.CorvidDelivery.Twitch.Bits.Leaderboard;
namespace TheOmenDen.CorvidDelivery.Twitch.Bits {
    /// <summary>
    /// Builds and executes requests for operations under \bits
    /// </summary>
    public class BitsRequestBuilder : BaseRequestBuilder {
        /// <summary>The cheermotes property</summary>
        public CheermotesRequestBuilder Cheermotes { get =>
            new CheermotesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The extensions property</summary>
        public ExtensionsRequestBuilder Extensions { get =>
            new ExtensionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The leaderboard property</summary>
        public LeaderboardRequestBuilder Leaderboard { get =>
            new LeaderboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="BitsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BitsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/bits", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="BitsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BitsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/bits", rawUrl) {
        }
    }
}
