// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace TheOmenDen.CorvidDelivery.Twitch.Guest_star.Slot_settings {
    /// <summary>
    /// Builds and executes requests for operations under \guest_star\slot_settings
    /// </summary>
    public class Slot_settingsRequestBuilder : BaseRequestBuilder {
        /// <summary>
        /// Instantiates a new <see cref="Slot_settingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Slot_settingsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/guest_star/slot_settings{?broadcaster_id*,is_audio_enabled*,is_live*,is_video_enabled*,moderator_id*,session_id*,slot_id*,volume*}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="Slot_settingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Slot_settingsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/guest_star/slot_settings{?broadcaster_id*,is_audio_enabled*,is_live*,is_video_enabled*,moderator_id*,session_id*,slot_id*,volume*}", rawUrl) {
        }
        /// <summary>
        /// BETA Allows a user to update slot settings for a particular guest within a Guest Star session.
        /// </summary>
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> PatchAsync(Action<RequestConfiguration<Slot_settingsRequestBuilderPatchQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default) {
#nullable restore
#else
        public async Task<Stream> PatchAsync(Action<RequestConfiguration<Slot_settingsRequestBuilderPatchQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default) {
#endif
            var requestInfo = ToPatchRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// BETA Allows a user to update slot settings for a particular guest within a Guest Star session.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(Action<RequestConfiguration<Slot_settingsRequestBuilderPatchQueryParameters>>? requestConfiguration = default) {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(Action<RequestConfiguration<Slot_settingsRequestBuilderPatchQueryParameters>> requestConfiguration = default) {
#endif
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="Slot_settingsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public Slot_settingsRequestBuilder WithUrl(string rawUrl) {
            return new Slot_settingsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// BETA Allows a user to update slot settings for a particular guest within a Guest Star session.
        /// </summary>
        public class Slot_settingsRequestBuilderPatchQueryParameters {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("broadcaster_id")]
            public string? BroadcasterId { get; set; }
#nullable restore
#else
            [QueryParameter("broadcaster_id")]
            public string BroadcasterId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("is_audio_enabled")]
            public string? IsAudioEnabled { get; set; }
#nullable restore
#else
            [QueryParameter("is_audio_enabled")]
            public string IsAudioEnabled { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("is_live")]
            public string? IsLive { get; set; }
#nullable restore
#else
            [QueryParameter("is_live")]
            public string IsLive { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("is_video_enabled")]
            public string? IsVideoEnabled { get; set; }
#nullable restore
#else
            [QueryParameter("is_video_enabled")]
            public string IsVideoEnabled { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("moderator_id")]
            public string? ModeratorId { get; set; }
#nullable restore
#else
            [QueryParameter("moderator_id")]
            public string ModeratorId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("session_id")]
            public string? SessionId { get; set; }
#nullable restore
#else
            [QueryParameter("session_id")]
            public string SessionId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("slot_id")]
            public string? SlotId { get; set; }
#nullable restore
#else
            [QueryParameter("slot_id")]
            public string SlotId { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("volume")]
            public string? Volume { get; set; }
#nullable restore
#else
            [QueryParameter("volume")]
            public string Volume { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class Slot_settingsRequestBuilderPatchRequestConfiguration : RequestConfiguration<Slot_settingsRequestBuilderPatchQueryParameters> {
        }
    }
}
