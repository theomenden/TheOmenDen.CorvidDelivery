// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
using TheOmenDen.CorvidDelivery.Twitch.Channel_points.Custom_rewards;
namespace TheOmenDen.CorvidDelivery.Twitch.Channel_points {
    /// <summary>
    /// Builds and executes requests for operations under \channel_points
    /// </summary>
    public class Channel_pointsRequestBuilder : BaseRequestBuilder {
        /// <summary>The custom_rewards property</summary>
        public Custom_rewardsRequestBuilder Custom_rewards { get =>
            new Custom_rewardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="Channel_pointsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Channel_pointsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/channel_points", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="Channel_pointsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Channel_pointsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/channel_points", rawUrl) {
        }
    }
}
