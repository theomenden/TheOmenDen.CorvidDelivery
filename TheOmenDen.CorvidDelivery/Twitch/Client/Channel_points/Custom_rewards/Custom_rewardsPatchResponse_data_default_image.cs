// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace TheOmenDen.CorvidDelivery.Twitch.Channel_points.Custom_rewards {
    public class Custom_rewardsPatchResponse_data_default_image : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The url_1x property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url1x { get; set; }
#nullable restore
#else
        public string Url1x { get; set; }
#endif
        /// <summary>The url_2x property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url2x { get; set; }
#nullable restore
#else
        public string Url2x { get; set; }
#endif
        /// <summary>The url_4x property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url4x { get; set; }
#nullable restore
#else
        public string Url4x { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Custom_rewardsPatchResponse_data_default_image"/> and sets the default values.
        /// </summary>
        public Custom_rewardsPatchResponse_data_default_image() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Custom_rewardsPatchResponse_data_default_image"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Custom_rewardsPatchResponse_data_default_image CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Custom_rewardsPatchResponse_data_default_image();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"url_1x", n => { Url1x = n.GetStringValue(); } },
                {"url_2x", n => { Url2x = n.GetStringValue(); } },
                {"url_4x", n => { Url4x = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("url_1x", Url1x);
            writer.WriteStringValue("url_2x", Url2x);
            writer.WriteStringValue("url_4x", Url4x);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
