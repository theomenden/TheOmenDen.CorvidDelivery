// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace TheOmenDen.CorvidDelivery.Twitch.Extensions {
    public class ExtensionsGetResponse_data : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The allowlisted_config_urls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowlistedConfigUrls { get; set; }
#nullable restore
#else
        public List<string> AllowlistedConfigUrls { get; set; }
#endif
        /// <summary>The allowlisted_panel_urls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowlistedPanelUrls { get; set; }
#nullable restore
#else
        public List<string> AllowlistedPanelUrls { get; set; }
#endif
        /// <summary>The author_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorName { get; set; }
#nullable restore
#else
        public string AuthorName { get; set; }
#endif
        /// <summary>The bits_enabled property</summary>
        public bool? BitsEnabled { get; set; }
        /// <summary>The can_install property</summary>
        public bool? CanInstall { get; set; }
        /// <summary>The configuration_location property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConfigurationLocation { get; set; }
#nullable restore
#else
        public string ConfigurationLocation { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The eula_tos_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EulaTosUrl { get; set; }
#nullable restore
#else
        public string EulaTosUrl { get; set; }
#endif
        /// <summary>The has_chat_support property</summary>
        public bool? HasChatSupport { get; set; }
        /// <summary>The icon_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IconUrl { get; set; }
#nullable restore
#else
        public string IconUrl { get; set; }
#endif
        /// <summary>The icon_urls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_icon_urls? IconUrls { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_icon_urls IconUrls { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The privacy_policy_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicyUrl { get; set; }
#nullable restore
#else
        public string PrivacyPolicyUrl { get; set; }
#endif
        /// <summary>The request_identity_link property</summary>
        public bool? RequestIdentityLink { get; set; }
        /// <summary>The screenshot_urls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScreenshotUrls { get; set; }
#nullable restore
#else
        public List<string> ScreenshotUrls { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The subscriptions_support_level property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriptionsSupportLevel { get; set; }
#nullable restore
#else
        public string SubscriptionsSupportLevel { get; set; }
#endif
        /// <summary>The summary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Summary { get; set; }
#nullable restore
#else
        public string Summary { get; set; }
#endif
        /// <summary>The support_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SupportEmail { get; set; }
#nullable restore
#else
        public string SupportEmail { get; set; }
#endif
        /// <summary>The version property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Version { get; set; }
#nullable restore
#else
        public string Version { get; set; }
#endif
        /// <summary>The viewer_summary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ViewerSummary { get; set; }
#nullable restore
#else
        public string ViewerSummary { get; set; }
#endif
        /// <summary>The views property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_views? Views { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_views Views { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="ExtensionsGetResponse_data"/> and sets the default values.
        /// </summary>
        public ExtensionsGetResponse_data() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ExtensionsGetResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ExtensionsGetResponse_data CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ExtensionsGetResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"allowlisted_config_urls", n => { AllowlistedConfigUrls = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"allowlisted_panel_urls", n => { AllowlistedPanelUrls = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"author_name", n => { AuthorName = n.GetStringValue(); } },
                {"bits_enabled", n => { BitsEnabled = n.GetBoolValue(); } },
                {"can_install", n => { CanInstall = n.GetBoolValue(); } },
                {"configuration_location", n => { ConfigurationLocation = n.GetStringValue(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"eula_tos_url", n => { EulaTosUrl = n.GetStringValue(); } },
                {"has_chat_support", n => { HasChatSupport = n.GetBoolValue(); } },
                {"icon_url", n => { IconUrl = n.GetStringValue(); } },
                {"icon_urls", n => { IconUrls = n.GetObjectValue<ExtensionsGetResponse_data_icon_urls>(ExtensionsGetResponse_data_icon_urls.CreateFromDiscriminatorValue); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"name", n => { Name = n.GetStringValue(); } },
                {"privacy_policy_url", n => { PrivacyPolicyUrl = n.GetStringValue(); } },
                {"request_identity_link", n => { RequestIdentityLink = n.GetBoolValue(); } },
                {"screenshot_urls", n => { ScreenshotUrls = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"state", n => { State = n.GetStringValue(); } },
                {"subscriptions_support_level", n => { SubscriptionsSupportLevel = n.GetStringValue(); } },
                {"summary", n => { Summary = n.GetStringValue(); } },
                {"support_email", n => { SupportEmail = n.GetStringValue(); } },
                {"version", n => { Version = n.GetStringValue(); } },
                {"viewer_summary", n => { ViewerSummary = n.GetStringValue(); } },
                {"views", n => { Views = n.GetObjectValue<ExtensionsGetResponse_data_views>(ExtensionsGetResponse_data_views.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("allowlisted_config_urls", AllowlistedConfigUrls);
            writer.WriteCollectionOfPrimitiveValues<string>("allowlisted_panel_urls", AllowlistedPanelUrls);
            writer.WriteStringValue("author_name", AuthorName);
            writer.WriteBoolValue("bits_enabled", BitsEnabled);
            writer.WriteBoolValue("can_install", CanInstall);
            writer.WriteStringValue("configuration_location", ConfigurationLocation);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("eula_tos_url", EulaTosUrl);
            writer.WriteBoolValue("has_chat_support", HasChatSupport);
            writer.WriteStringValue("icon_url", IconUrl);
            writer.WriteObjectValue<ExtensionsGetResponse_data_icon_urls>("icon_urls", IconUrls);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("privacy_policy_url", PrivacyPolicyUrl);
            writer.WriteBoolValue("request_identity_link", RequestIdentityLink);
            writer.WriteCollectionOfPrimitiveValues<string>("screenshot_urls", ScreenshotUrls);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("subscriptions_support_level", SubscriptionsSupportLevel);
            writer.WriteStringValue("summary", Summary);
            writer.WriteStringValue("support_email", SupportEmail);
            writer.WriteStringValue("version", Version);
            writer.WriteStringValue("viewer_summary", ViewerSummary);
            writer.WriteObjectValue<ExtensionsGetResponse_data_views>("views", Views);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
