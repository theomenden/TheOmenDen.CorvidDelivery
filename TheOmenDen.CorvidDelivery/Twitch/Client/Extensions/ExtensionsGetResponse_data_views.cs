// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace TheOmenDen.CorvidDelivery.Twitch.Extensions {
    public class ExtensionsGetResponse_data_views : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The component property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_views_component? Component { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_views_component Component { get; set; }
#endif
        /// <summary>The mobile property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_views_mobile? Mobile { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_views_mobile Mobile { get; set; }
#endif
        /// <summary>The panel property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_views_panel? Panel { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_views_panel Panel { get; set; }
#endif
        /// <summary>The video_overlay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ExtensionsGetResponse_data_views_video_overlay? VideoOverlay { get; set; }
#nullable restore
#else
        public ExtensionsGetResponse_data_views_video_overlay VideoOverlay { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="ExtensionsGetResponse_data_views"/> and sets the default values.
        /// </summary>
        public ExtensionsGetResponse_data_views() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ExtensionsGetResponse_data_views"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ExtensionsGetResponse_data_views CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ExtensionsGetResponse_data_views();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"component", n => { Component = n.GetObjectValue<ExtensionsGetResponse_data_views_component>(ExtensionsGetResponse_data_views_component.CreateFromDiscriminatorValue); } },
                {"mobile", n => { Mobile = n.GetObjectValue<ExtensionsGetResponse_data_views_mobile>(ExtensionsGetResponse_data_views_mobile.CreateFromDiscriminatorValue); } },
                {"panel", n => { Panel = n.GetObjectValue<ExtensionsGetResponse_data_views_panel>(ExtensionsGetResponse_data_views_panel.CreateFromDiscriminatorValue); } },
                {"video_overlay", n => { VideoOverlay = n.GetObjectValue<ExtensionsGetResponse_data_views_video_overlay>(ExtensionsGetResponse_data_views_video_overlay.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<ExtensionsGetResponse_data_views_component>("component", Component);
            writer.WriteObjectValue<ExtensionsGetResponse_data_views_mobile>("mobile", Mobile);
            writer.WriteObjectValue<ExtensionsGetResponse_data_views_panel>("panel", Panel);
            writer.WriteObjectValue<ExtensionsGetResponse_data_views_video_overlay>("video_overlay", VideoOverlay);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
